<?xml version="1.0"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" default="build" name="downloalink">

	<property file="build.properties" />

	<taskdef resource="checkstyletask.properties" classpath="${checkstyle.jar}" />


	<target name="resolve" description="Resolve and Retrieve with ivy">
		<ivy:settings file="ivysettings.xml" />
		<ivy:resolve />
		<ivy:cachepath pathid="default.classpath" />
		<ivy:retrieve sync="true" type="jar" />
	</target>

	<target name="compile" depends="resolve" description="Compile">
		<mkdir dir="${build.classes}" />
		<javac srcdir="${src.main}/java" destdir="${build.classes}">
			<classpath refid="default.classpath" />
		</javac>
		<copy todir="${build.classes}" overwrite="false">
			<fileset dir="${src.main}/java">
				<include name="**/*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${src.main}/resources">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>

	<target name="build" depends="compile" description="pack project to jar">
		<jar destfile="${runnable.dir}/${runnable.file.name}.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="${manifest.main.class}" />
				<attribute name="Class-Path" value="${manifest.class.path}" />
			</manifest>
			<fileset dir="${build.classes}" />
		</jar>
		<copy todir="${runnable.dir}/lib" overwrite="false">
			<fileset dir="lib">
				<include name="**/*" />
			</fileset>
		</copy>
		<echo file="${runnable.dir}/${runnable.file.name}.bat" message="java -jar ${runnable.file.name}.jar" />
	</target>

	<target name="clean">
		<delete dir="${lib.dir}" />
		<delete dir="${build.classes}" />
		<delete dir="${runnable.dir}" />
	</target>

	<target name="checkstyle" description="Generates a report of code convention violations." depends="init-checkstyle">
		<!-- See http://checkstyle.sourceforge.net/anttask.html for full options of using checkstyle with ant-->
		<mkdir dir="${build}" />
		<checkstyle config="${checkstyle.config.file}" failureProperty="checkstyle.failure" failOnViolation="false">

			<formatter type="xml" tofile="${checkstyle.result.file}" />
			<fileset dir="${src.main}" includes="**/*.java" />
		</checkstyle>
	</target>

	<target name="init-checkstyle" depends="resolve">
		<path id="checkstyle.lib.path">
			<fileset dir="${lib.dir}" includes="*.jar" />
		</path>
		<!-- Sevntu custom checks are retrieved by Ivy into lib folder and will be accessible to checkstyle-->
		<taskdef resource="checkstyletask.properties" classpathref="checkstyle.lib.path" />
	</target>

	<target name="doc" description="Generate documentation">
		<javadoc destdir="${javadoc}">
			<sourcepath location="${src.main.java}" />
			<classpath location="${build.classes}" />
		</javadoc>
	</target>

	<path id="cobertura.classpath">
		<fileset dir="${lib.dir}">
			<include name="cobertura-1.9.4.jar" />
			<include name="*.jar" />
		</fileset>
	</path>


	<target name="prepare_cobertura" depends="build">
		<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
		<cobertura-instrument todir="${cobertura.instruments}">

			<fileset dir="${build.classes}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="cobertura" depends="prepare_cobertura" description="create code coverage report">
		<cobertura-report format="html" destdir="${cobertura.coveragereport}">
			<fileset dir="${src.main}">
				<include name="**/*.java" />
				<exclude name="**/*Stub.java" />
			</fileset>
		</cobertura-report>
	</target>

</project>